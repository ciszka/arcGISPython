#-------------------------------------------------------------------------------
# Name:        MakeMapDocs
# Purpose:  The goal of this program is to take a list of sites; or places; from
#           a list and use that to iterate through and make map documents of
#           each item that is in that list preserving items like the Key etc
# Author:      pprzystupa
#
# Created:     02/08/2018
# Copyright:   (c) pprzystupa 2018
# Licence:     <your licence>
#-------------------------------------------------------------------------------

#Open a Map document
#This wants to be a tool within ArcGIS where possible so I need to set it up
#As a toolbox
#I want a particular map document to be opened and set up
#I want then to make copies of that map document
#But each map document is zoomed in at a particular distance for each site
#In the Table

try:
    import os.path
    import arcpy
    from arcpy import env
    arcpy.AddWarning("Addd me some modulessss")

    #set environment
    #env.workspace = "H:\\Current\\"
#    env.workspace = "H:\\DissertationResearch\\PreliminaryResearch\\SAA_2015\\SAA_2015\\ChildrensHomes_SAA_2015.gdb\\\\"
    env.workspace = "H:\\CensusData.gdb\\\\"
    env.overwriteOutput = True
    workName = "H:\\CensusData.gdb\\\\"

    arcpy.AddWarning("I set the workspace")
    print "I set the workspace"

    siteList = [] #made an empy array for the sites

    field = "NHGISNAM"
    #Create a variable with the name of the subject feature class (aka what fucking shapefile do you want to look at within the geodatabase
    layer = "County1860_studyArea"
    #Set up a cursor to iterate through the selected site
    intable = workName + layer
    print intable
    siteCursor = arcpy.da.SearchCursor(layer, [field])
    print "I created the cursor"
    temptable = arcpy.MakeFeatureLayer_management(workName + layer, "temp_Lyr")
    print "I made the feature layer"

    arcpy.MakeTableView_management(inTable, "fire_view", "", "", fieldinfo)
    arcpy.AddWarning("made the table view")

    for row in siteCursor:
        siteName = row[0]
        if siteList not in siteList:
            siteList.append(siteName)
            arcpy.AddWarning(siteName)
    print "I made a list of sites"

    for site in siteList:
        print site
        #siteQuery =  field + ' = \'' + site + '\''
        print siteQuery
        arcpy.AddWarning(siteQuery) #I'm adding a warning that is just the entry of the sitequery
        #I need to actually select the thing by attribute
        arcpy.SelectLayerByAttribute_management("tmp_Lyr", "NEW_SELECTION", "ICPSRST = 73")
        print "I selected the thing"
        #arcpy.AddWarning("Selected by attribute") #I'm selecting somethinb by attribute AKA the sitename
        #nametemp = site.replace(" ",  "_") #creating a temporary name for some reason
        #newMapDocName = "H:\\Current\\" + nametemp + ".mdx\\"
        #print NewMapDocName
#        arcpy.AddWarning("newdocName")

    #    arcpy.AddWarning("You are making a document of the" + place + ".")
        #df = arcpy.mapping.ListDataFrames(mxd, "Layers")[0]#what are the dataframes in the document I'm looking at
        #panToLoc=arcpy.mapping.ListLayers(mxd, "Sites", df)[0] #What are the layers within that data frame
        #within that layer; I want to select an object
        #Then I want to pan to THAT object within the dataframe
        #extent = arcpy.SelectLayerByAttribute_management("site_List", "NEW_SELECTION", siteQuery) #I'm selecting the site by the attribute, I'm telling it which layer to look in and then saying it's a new selection and then passing it the
        #df.panToExtent(place.getSelectedExtent(extent))
        #location.extent = panToLoc.getExtent(True)
        #arcpy.RefreshActiveView()
#        mxd = arcpy.mapping.MapDocument(newMapDocName)
        #Still Need the save a map document bit
        #arcpy.AddWarning("A new Map Document called" + newMapdDocName + " was created .")

except:
    arcpy.AddWarning("I failed, sorry....go take a break")
    print "I failed, sorry... go take a break"
